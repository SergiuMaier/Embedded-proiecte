
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000052a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800100  00800100  0000052a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000052a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000055c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f6c  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bd  00000000  00000000  000015f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006df  00000000  00000000  00001fad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  0000268c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000581  00000000  00000000  000028bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004e2  00000000  00000000  00002e3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000331f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 61 01 	jmp	0x2c2	; 0x2c2 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ab 34       	cpi	r26, 0x4B	; 75
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 b4 01 	call	0x368	; 0x368 <main>
  88:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pin_toggle_led0>:
	struct timer t;
	
	t.counter_initial = 0;
	
	return t;
}
  90:	95 b1       	in	r25, 0x05	; 5
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	98 27       	eor	r25, r24
  96:	95 b9       	out	0x05, r25	; 5
  98:	2f ef       	ldi	r18, 0xFF	; 255
  9a:	33 ec       	ldi	r19, 0xC3	; 195
  9c:	99 e0       	ldi	r25, 0x09	; 9
  9e:	21 50       	subi	r18, 0x01	; 1
  a0:	30 40       	sbci	r19, 0x00	; 0
  a2:	90 40       	sbci	r25, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <pin_toggle_led0+0xe>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <pin_toggle_led0+0x18>
  a8:	00 00       	nop
  aa:	95 b1       	in	r25, 0x05	; 5
  ac:	89 27       	eor	r24, r25
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <pin_toggle_led1>:
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	98 27       	eor	r25, r24
  b8:	95 b9       	out	0x05, r25	; 5
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	33 ec       	ldi	r19, 0xC3	; 195
  be:	99 e0       	ldi	r25, 0x09	; 9
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	30 40       	sbci	r19, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <pin_toggle_led1+0xe>
  c8:	00 c0       	rjmp	.+0      	; 0xca <pin_toggle_led1+0x18>
  ca:	00 00       	nop
  cc:	95 b1       	in	r25, 0x05	; 5
  ce:	89 27       	eor	r24, r25
  d0:	85 b9       	out	0x05, r24	; 5
  d2:	08 95       	ret

000000d4 <pin_toggle_led2>:
  d4:	95 b1       	in	r25, 0x05	; 5
  d6:	84 e0       	ldi	r24, 0x04	; 4
  d8:	98 27       	eor	r25, r24
  da:	95 b9       	out	0x05, r25	; 5
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	33 ec       	ldi	r19, 0xC3	; 195
  e0:	99 e0       	ldi	r25, 0x09	; 9
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	30 40       	sbci	r19, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <pin_toggle_led2+0xe>
  ea:	00 c0       	rjmp	.+0      	; 0xec <pin_toggle_led2+0x18>
  ec:	00 00       	nop
  ee:	95 b1       	in	r25, 0x05	; 5
  f0:	89 27       	eor	r24, r25
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	08 95       	ret

000000f6 <pin_toggle_led3>:
  f6:	95 b1       	in	r25, 0x05	; 5
  f8:	88 e0       	ldi	r24, 0x08	; 8
  fa:	98 27       	eor	r25, r24
  fc:	95 b9       	out	0x05, r25	; 5
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	33 ec       	ldi	r19, 0xC3	; 195
 102:	99 e0       	ldi	r25, 0x09	; 9
 104:	21 50       	subi	r18, 0x01	; 1
 106:	30 40       	sbci	r19, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <pin_toggle_led3+0xe>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <pin_toggle_led3+0x18>
 10e:	00 00       	nop
 110:	95 b1       	in	r25, 0x05	; 5
 112:	89 27       	eor	r24, r25
 114:	85 b9       	out	0x05, r24	; 5
 116:	08 95       	ret

00000118 <aprinde_led>:
 118:	fc 01       	movw	r30, r24
 11a:	09 95       	icall
 11c:	08 95       	ret

0000011e <creeaza_timer>:
 11e:	8f 92       	push	r8
 120:	9f 92       	push	r9
 122:	af 92       	push	r10
 124:	bf 92       	push	r11
 126:	cf 92       	push	r12
 128:	df 92       	push	r13
 12a:	ef 92       	push	r14
 12c:	ff 92       	push	r15
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62
 13a:	fc 01       	movw	r30, r24
 13c:	60 83       	st	Z, r22
 13e:	41 83       	std	Z+1, r20	; 0x01
 140:	22 83       	std	Z+2, r18	; 0x02
 142:	e3 82       	std	Z+3, r14	; 0x03
 144:	f4 82       	std	Z+4, r15	; 0x04
 146:	05 83       	std	Z+5, r16	; 0x05
 148:	16 83       	std	Z+6, r17	; 0x06
 14a:	a7 82       	std	Z+7, r10	; 0x07
 14c:	b0 86       	std	Z+8, r11	; 0x08
 14e:	c1 86       	std	Z+9, r12	; 0x09
 150:	d2 86       	std	Z+10, r13	; 0x0a
 152:	94 86       	std	Z+12, r9	; 0x0c
 154:	83 86       	std	Z+11, r8	; 0x0b
 156:	df 91       	pop	r29
 158:	cf 91       	pop	r28
 15a:	1f 91       	pop	r17
 15c:	0f 91       	pop	r16
 15e:	ff 90       	pop	r15
 160:	ef 90       	pop	r14
 162:	df 90       	pop	r13
 164:	cf 90       	pop	r12
 166:	bf 90       	pop	r11
 168:	af 90       	pop	r10
 16a:	9f 90       	pop	r9
 16c:	8f 90       	pop	r8
 16e:	08 95       	ret

00000170 <evalueaza_timer>:
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <id_timer+0x1>
 17a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <id_timer>
 17e:	c0 e0       	ldi	r28, 0x00	; 0
 180:	d0 e0       	ldi	r29, 0x00	; 0
 182:	10 c0       	rjmp	.+32     	; 0x1a4 <evalueaza_timer+0x34>
 184:	2d e0       	ldi	r18, 0x0D	; 13
 186:	28 9f       	mul	r18, r24
 188:	f0 01       	movw	r30, r0
 18a:	29 9f       	mul	r18, r25
 18c:	f0 0d       	add	r31, r0
 18e:	11 24       	eor	r1, r1
 190:	ea 5f       	subi	r30, 0xFA	; 250
 192:	fe 4f       	sbci	r31, 0xFE	; 254
 194:	20 81       	ld	r18, Z
 196:	21 11       	cpse	r18, r1
 198:	21 96       	adiw	r28, 0x01	; 1
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <id_timer+0x1>
 1a0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <id_timer>
 1a4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 1a8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 1ac:	85 30       	cpi	r24, 0x05	; 5
 1ae:	91 05       	cpc	r25, r1
 1b0:	4c f3       	brlt	.-46     	; 0x184 <evalueaza_timer+0x14>
 1b2:	20 97       	sbiw	r28, 0x00	; 0
 1b4:	09 f4       	brne	.+2      	; 0x1b8 <evalueaza_timer+0x48>
 1b6:	81 c0       	rjmp	.+258    	; 0x2ba <evalueaza_timer+0x14a>
 1b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <evalueaza_timer+0x56>
 1c4:	7a c0       	rjmp	.+244    	; 0x2ba <evalueaza_timer+0x14a>
 1c6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <id_timer+0x1>
 1ca:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <id_timer>
 1ce:	6d c0       	rjmp	.+218    	; 0x2aa <evalueaza_timer+0x13a>
 1d0:	8d e0       	ldi	r24, 0x0D	; 13
 1d2:	82 9f       	mul	r24, r18
 1d4:	f0 01       	movw	r30, r0
 1d6:	83 9f       	mul	r24, r19
 1d8:	f0 0d       	add	r31, r0
 1da:	11 24       	eor	r1, r1
 1dc:	ea 5f       	subi	r30, 0xFA	; 250
 1de:	fe 4f       	sbci	r31, 0xFE	; 254
 1e0:	83 81       	ldd	r24, Z+3	; 0x03
 1e2:	94 81       	ldd	r25, Z+4	; 0x04
 1e4:	a5 81       	ldd	r26, Z+5	; 0x05
 1e6:	b6 81       	ldd	r27, Z+6	; 0x06
 1e8:	01 96       	adiw	r24, 0x01	; 1
 1ea:	a1 1d       	adc	r26, r1
 1ec:	b1 1d       	adc	r27, r1
 1ee:	83 83       	std	Z+3, r24	; 0x03
 1f0:	94 83       	std	Z+4, r25	; 0x04
 1f2:	a5 83       	std	Z+5, r26	; 0x05
 1f4:	b6 83       	std	Z+6, r27	; 0x06
 1f6:	47 81       	ldd	r20, Z+7	; 0x07
 1f8:	50 85       	ldd	r21, Z+8	; 0x08
 1fa:	61 85       	ldd	r22, Z+9	; 0x09
 1fc:	72 85       	ldd	r23, Z+10	; 0x0a
 1fe:	84 17       	cp	r24, r20
 200:	95 07       	cpc	r25, r21
 202:	a6 07       	cpc	r26, r22
 204:	b7 07       	cpc	r27, r23
 206:	09 f0       	breq	.+2      	; 0x20a <evalueaza_timer+0x9a>
 208:	47 c0       	rjmp	.+142    	; 0x298 <evalueaza_timer+0x128>
 20a:	8d e0       	ldi	r24, 0x0D	; 13
 20c:	82 9f       	mul	r24, r18
 20e:	f0 01       	movw	r30, r0
 210:	83 9f       	mul	r24, r19
 212:	f0 0d       	add	r31, r0
 214:	11 24       	eor	r1, r1
 216:	ea 5f       	subi	r30, 0xFA	; 250
 218:	fe 4f       	sbci	r31, 0xFE	; 254
 21a:	81 81       	ldd	r24, Z+1	; 0x01
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	e1 f5       	brne	.+120    	; 0x298 <evalueaza_timer+0x128>
 220:	1d e0       	ldi	r17, 0x0D	; 13
 222:	12 9f       	mul	r17, r18
 224:	f0 01       	movw	r30, r0
 226:	13 9f       	mul	r17, r19
 228:	f0 0d       	add	r31, r0
 22a:	11 24       	eor	r1, r1
 22c:	ea 5f       	subi	r30, 0xFA	; 250
 22e:	fe 4f       	sbci	r31, 0xFE	; 254
 230:	83 85       	ldd	r24, Z+11	; 0x0b
 232:	94 85       	ldd	r25, Z+12	; 0x0c
 234:	0e 94 8c 00 	call	0x118	; 0x118 <aprinde_led>
 238:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 23c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 240:	18 9f       	mul	r17, r24
 242:	f0 01       	movw	r30, r0
 244:	19 9f       	mul	r17, r25
 246:	f0 0d       	add	r31, r0
 248:	11 24       	eor	r1, r1
 24a:	ea 5f       	subi	r30, 0xFA	; 250
 24c:	fe 4f       	sbci	r31, 0xFE	; 254
 24e:	22 e0       	ldi	r18, 0x02	; 2
 250:	21 83       	std	Z+1, r18	; 0x01
 252:	22 81       	ldd	r18, Z+2	; 0x02
 254:	21 30       	cpi	r18, 0x01	; 1
 256:	59 f4       	brne	.+22     	; 0x26e <evalueaza_timer+0xfe>
 258:	2d e0       	ldi	r18, 0x0D	; 13
 25a:	28 9f       	mul	r18, r24
 25c:	f0 01       	movw	r30, r0
 25e:	29 9f       	mul	r18, r25
 260:	f0 0d       	add	r31, r0
 262:	11 24       	eor	r1, r1
 264:	ea 5f       	subi	r30, 0xFA	; 250
 266:	fe 4f       	sbci	r31, 0xFE	; 254
 268:	21 e0       	ldi	r18, 0x01	; 1
 26a:	21 83       	std	Z+1, r18	; 0x01
 26c:	09 c0       	rjmp	.+18     	; 0x280 <evalueaza_timer+0x110>
 26e:	2d e0       	ldi	r18, 0x0D	; 13
 270:	28 9f       	mul	r18, r24
 272:	f0 01       	movw	r30, r0
 274:	29 9f       	mul	r18, r25
 276:	f0 0d       	add	r31, r0
 278:	11 24       	eor	r1, r1
 27a:	ea 5f       	subi	r30, 0xFA	; 250
 27c:	fe 4f       	sbci	r31, 0xFE	; 254
 27e:	11 82       	std	Z+1, r1	; 0x01
 280:	2d e0       	ldi	r18, 0x0D	; 13
 282:	28 9f       	mul	r18, r24
 284:	f0 01       	movw	r30, r0
 286:	29 9f       	mul	r18, r25
 288:	f0 0d       	add	r31, r0
 28a:	11 24       	eor	r1, r1
 28c:	ea 5f       	subi	r30, 0xFA	; 250
 28e:	fe 4f       	sbci	r31, 0xFE	; 254
 290:	13 82       	std	Z+3, r1	; 0x03
 292:	14 82       	std	Z+4, r1	; 0x04
 294:	15 82       	std	Z+5, r1	; 0x05
 296:	16 82       	std	Z+6, r1	; 0x06
 298:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 29c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 2a0:	01 96       	adiw	r24, 0x01	; 1
 2a2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <id_timer+0x1>
 2a6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <id_timer>
 2aa:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <id_timer>
 2ae:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <id_timer+0x1>
 2b2:	c2 17       	cp	r28, r18
 2b4:	d3 07       	cpc	r29, r19
 2b6:	0c f0       	brlt	.+2      	; 0x2ba <evalueaza_timer+0x14a>
 2b8:	8b cf       	rjmp	.-234    	; 0x1d0 <evalueaza_timer+0x60>
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	08 95       	ret

000002c2 <__vector_14>:

ISR(TIMER0_COMPA_vect){ 
 2c2:	1f 92       	push	r1
 2c4:	0f 92       	push	r0
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	0f 92       	push	r0
 2ca:	11 24       	eor	r1, r1
 2cc:	8f 93       	push	r24
 2ce:	9f 93       	push	r25
 2d0:	af 93       	push	r26
 2d2:	bf 93       	push	r27
	
	cli();
 2d4:	f8 94       	cli
	
	sys_tick++;
 2d6:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <sys_tick>
 2da:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <sys_tick+0x1>
 2de:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <sys_tick+0x2>
 2e2:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <sys_tick+0x3>
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	a1 1d       	adc	r26, r1
 2ea:	b1 1d       	adc	r27, r1
 2ec:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <sys_tick>
 2f0:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <sys_tick+0x1>
 2f4:	a0 93 49 01 	sts	0x0149, r26	; 0x800149 <sys_tick+0x2>
 2f8:	b0 93 4a 01 	sts	0x014A, r27	; 0x80014a <sys_tick+0x3>
	flag = 1;     
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <flag+0x1>
 304:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <flag>
	counter_timp = 1;
 308:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 30c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	sei();
 310:	78 94       	sei
}
 312:	bf 91       	pop	r27
 314:	af 91       	pop	r26
 316:	9f 91       	pop	r25
 318:	8f 91       	pop	r24
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <port_init>:

#include <stdio.h>

void port_init(void){
	
	DDRB = 0x0F;                          //00001111
 324:	8f e0       	ldi	r24, 0x0F	; 15
 326:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
 328:	15 b8       	out	0x05, r1	; 5
	DDRD |= (1 << PIND2) | (1 << PIND3);  //INT0 & INT1
 32a:	8a b1       	in	r24, 0x0a	; 10
 32c:	8c 60       	ori	r24, 0x0C	; 12
 32e:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << PIND2) | (1 << PIND3);
 330:	8b b1       	in	r24, 0x0b	; 11
 332:	8c 60       	ori	r24, 0x0C	; 12
 334:	8b b9       	out	0x0b, r24	; 11
 336:	08 95       	ret

00000338 <interrupt_init>:
}

void interrupt_init(void){
	
	EICRA |= (1 << ISC11) | (1 << ISC10) | (1 << ISC01) | (1 << ISC00);
 338:	e9 e6       	ldi	r30, 0x69	; 105
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	8f 60       	ori	r24, 0x0F	; 15
 340:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1) | (1 << INT0);
 342:	8d b3       	in	r24, 0x1d	; 29
 344:	83 60       	ori	r24, 0x03	; 3
 346:	8d bb       	out	0x1d, r24	; 29
	EIFR |= (0 << INTF1) | (0 << INTF0);
 348:	8c b3       	in	r24, 0x1c	; 28
 34a:	8c bb       	out	0x1c, r24	; 28
	PCICR |= (0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
 34c:	e8 e6       	ldi	r30, 0x68	; 104
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	80 83       	st	Z, r24
 354:	08 95       	ret

00000356 <init_devices>:
}

void init_devices(void){
	
	cli();
 356:	f8 94       	cli
	
	port_init();
 358:	0e 94 92 01 	call	0x324	; 0x324 <port_init>
	interrupt_init();
 35c:	0e 94 9c 01 	call	0x338	; 0x338 <interrupt_init>
	timer0_init();
 360:	0e 94 4a 02 	call	0x494	; 0x494 <timer0_init>
	
	sei();
 364:	78 94       	sei
 366:	08 95       	ret

00000368 <main>:

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void){
 368:	cf 93       	push	r28
 36a:	df 93       	push	r29
 36c:	cd b7       	in	r28, 0x3d	; 61
 36e:	de b7       	in	r29, 0x3e	; 62
 370:	2d 97       	sbiw	r28, 0x0d	; 13
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	f8 94       	cli
 376:	de bf       	out	0x3e, r29	; 62
 378:	0f be       	out	0x3f, r0	; 63
 37a:	cd bf       	out	0x3d, r28	; 61
	
	init_devices();	//porturi, timer, intreruperi
 37c:	0e 94 ab 01 	call	0x356	; 0x356 <init_devices>
	start_timer0(); 
 380:	0e 94 55 02 	call	0x4aa	; 0x4aa <start_timer0>
	
	timere[0] = creeaza_timer(1, PORNIT, TRUE, 0, 2000, pin_toggle_led0);
 384:	0f 2e       	mov	r0, r31
 386:	f8 e4       	ldi	r31, 0x48	; 72
 388:	8f 2e       	mov	r8, r31
 38a:	f0 e0       	ldi	r31, 0x00	; 0
 38c:	9f 2e       	mov	r9, r31
 38e:	f0 2d       	mov	r31, r0
 390:	0f 2e       	mov	r0, r31
 392:	f0 ed       	ldi	r31, 0xD0	; 208
 394:	af 2e       	mov	r10, r31
 396:	f7 e0       	ldi	r31, 0x07	; 7
 398:	bf 2e       	mov	r11, r31
 39a:	c1 2c       	mov	r12, r1
 39c:	d1 2c       	mov	r13, r1
 39e:	f0 2d       	mov	r31, r0
 3a0:	e1 2c       	mov	r14, r1
 3a2:	f1 2c       	mov	r15, r1
 3a4:	87 01       	movw	r16, r14
 3a6:	21 e0       	ldi	r18, 0x01	; 1
 3a8:	41 e0       	ldi	r20, 0x01	; 1
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	ce 01       	movw	r24, r28
 3ae:	01 96       	adiw	r24, 0x01	; 1
 3b0:	0e 94 8f 00 	call	0x11e	; 0x11e <creeaza_timer>
 3b4:	8d e0       	ldi	r24, 0x0D	; 13
 3b6:	fe 01       	movw	r30, r28
 3b8:	31 96       	adiw	r30, 0x01	; 1
 3ba:	a6 e0       	ldi	r26, 0x06	; 6
 3bc:	b1 e0       	ldi	r27, 0x01	; 1
 3be:	01 90       	ld	r0, Z+
 3c0:	0d 92       	st	X+, r0
 3c2:	8a 95       	dec	r24
 3c4:	e1 f7       	brne	.-8      	; 0x3be <main+0x56>
	timere[1] = creeaza_timer(2, PORNIT, FALSE, 0, 3000, pin_toggle_led1);
 3c6:	0f 2e       	mov	r0, r31
 3c8:	f9 e5       	ldi	r31, 0x59	; 89
 3ca:	8f 2e       	mov	r8, r31
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	9f 2e       	mov	r9, r31
 3d0:	f0 2d       	mov	r31, r0
 3d2:	0f 2e       	mov	r0, r31
 3d4:	f8 eb       	ldi	r31, 0xB8	; 184
 3d6:	af 2e       	mov	r10, r31
 3d8:	fb e0       	ldi	r31, 0x0B	; 11
 3da:	bf 2e       	mov	r11, r31
 3dc:	c1 2c       	mov	r12, r1
 3de:	d1 2c       	mov	r13, r1
 3e0:	f0 2d       	mov	r31, r0
 3e2:	20 e0       	ldi	r18, 0x00	; 0
 3e4:	41 e0       	ldi	r20, 0x01	; 1
 3e6:	62 e0       	ldi	r22, 0x02	; 2
 3e8:	ce 01       	movw	r24, r28
 3ea:	01 96       	adiw	r24, 0x01	; 1
 3ec:	0e 94 8f 00 	call	0x11e	; 0x11e <creeaza_timer>
 3f0:	8d e0       	ldi	r24, 0x0D	; 13
 3f2:	fe 01       	movw	r30, r28
 3f4:	31 96       	adiw	r30, 0x01	; 1
 3f6:	a3 e1       	ldi	r26, 0x13	; 19
 3f8:	b1 e0       	ldi	r27, 0x01	; 1
 3fa:	01 90       	ld	r0, Z+
 3fc:	0d 92       	st	X+, r0
 3fe:	8a 95       	dec	r24
 400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x92>
	timere[2] = creeaza_timer(3, PORNIT, TRUE, 0, 5000, pin_toggle_led2);
 402:	0f 2e       	mov	r0, r31
 404:	fa e6       	ldi	r31, 0x6A	; 106
 406:	8f 2e       	mov	r8, r31
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	9f 2e       	mov	r9, r31
 40c:	f0 2d       	mov	r31, r0
 40e:	0f 2e       	mov	r0, r31
 410:	f8 e8       	ldi	r31, 0x88	; 136
 412:	af 2e       	mov	r10, r31
 414:	f3 e1       	ldi	r31, 0x13	; 19
 416:	bf 2e       	mov	r11, r31
 418:	c1 2c       	mov	r12, r1
 41a:	d1 2c       	mov	r13, r1
 41c:	f0 2d       	mov	r31, r0
 41e:	21 e0       	ldi	r18, 0x01	; 1
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	63 e0       	ldi	r22, 0x03	; 3
 424:	ce 01       	movw	r24, r28
 426:	01 96       	adiw	r24, 0x01	; 1
 428:	0e 94 8f 00 	call	0x11e	; 0x11e <creeaza_timer>
 42c:	8d e0       	ldi	r24, 0x0D	; 13
 42e:	fe 01       	movw	r30, r28
 430:	31 96       	adiw	r30, 0x01	; 1
 432:	a0 e2       	ldi	r26, 0x20	; 32
 434:	b1 e0       	ldi	r27, 0x01	; 1
 436:	01 90       	ld	r0, Z+
 438:	0d 92       	st	X+, r0
 43a:	8a 95       	dec	r24
 43c:	e1 f7       	brne	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
	timere[3] = creeaza_timer(4, PORNIT, TRUE, 0, 10000, pin_toggle_led3);
 43e:	0f 2e       	mov	r0, r31
 440:	fb e7       	ldi	r31, 0x7B	; 123
 442:	8f 2e       	mov	r8, r31
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	9f 2e       	mov	r9, r31
 448:	f0 2d       	mov	r31, r0
 44a:	0f 2e       	mov	r0, r31
 44c:	f0 e1       	ldi	r31, 0x10	; 16
 44e:	af 2e       	mov	r10, r31
 450:	f7 e2       	ldi	r31, 0x27	; 39
 452:	bf 2e       	mov	r11, r31
 454:	c1 2c       	mov	r12, r1
 456:	d1 2c       	mov	r13, r1
 458:	f0 2d       	mov	r31, r0
 45a:	21 e0       	ldi	r18, 0x01	; 1
 45c:	41 e0       	ldi	r20, 0x01	; 1
 45e:	64 e0       	ldi	r22, 0x04	; 4
 460:	ce 01       	movw	r24, r28
 462:	01 96       	adiw	r24, 0x01	; 1
 464:	0e 94 8f 00 	call	0x11e	; 0x11e <creeaza_timer>
 468:	8d e0       	ldi	r24, 0x0D	; 13
 46a:	fe 01       	movw	r30, r28
 46c:	31 96       	adiw	r30, 0x01	; 1
 46e:	ad e2       	ldi	r26, 0x2D	; 45
 470:	b1 e0       	ldi	r27, 0x01	; 1
 472:	01 90       	ld	r0, Z+
 474:	0d 92       	st	X+, r0
 476:	8a 95       	dec	r24
 478:	e1 f7       	brne	.-8      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>

	do
	{	
		if(flag == 1)
 47a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <flag>
 47e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <flag+0x1>
 482:	01 97       	sbiw	r24, 0x01	; 1
 484:	d1 f7       	brne	.-12     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
		{
			flag = 0;
 486:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flag+0x1>
 48a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flag>
			evalueaza_timer();
 48e:	0e 94 b8 00 	call	0x170	; 0x170 <evalueaza_timer>
 492:	f3 cf       	rjmp	.-26     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>

00000494 <timer0_init>:
 */ 
#include "timer0_def.h"

void timer0_init(void){
	
	TCCR0A |= (1 << WGM01) | (0 << WGM00);  //modul CTC
 494:	84 b5       	in	r24, 0x24	; 36
 496:	82 60       	ori	r24, 0x02	; 2
 498:	84 bd       	out	0x24, r24	; 36
	OCR0A = 0xF9;
 49a:	89 ef       	ldi	r24, 0xF9	; 249
 49c:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
 49e:	ee e6       	ldi	r30, 0x6E	; 110
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	80 81       	ld	r24, Z
 4a4:	82 60       	ori	r24, 0x02	; 2
 4a6:	80 83       	st	Z, r24
 4a8:	08 95       	ret

000004aa <start_timer0>:
}

void start_timer0(){
	TCCR0B |= START_TIMER0;
 4aa:	85 b5       	in	r24, 0x25	; 37
 4ac:	83 60       	ori	r24, 0x03	; 3
 4ae:	85 bd       	out	0x25, r24	; 37
 4b0:	08 95       	ret

000004b2 <_exit>:
 4b2:	f8 94       	cli

000004b4 <__stop_program>:
 4b4:	ff cf       	rjmp	.-2      	; 0x4b4 <__stop_program>
