
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000058e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000051a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800100  00800100  0000058e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e8c  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096f  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000656  00000000  00000000  00001ee3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  0000253c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000547  00000000  00000000  0000275c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000479  00000000  00000000  00002ca3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000311c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 81 01 	jmp	0x302	; 0x302 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ab 34       	cpi	r26, 0x4B	; 75
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <main>
  88:	0c 94 8b 02 	jmp	0x516	; 0x516 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pin_toggle_led0>:

void reset_timer(int i, uint32_t timp_reset){
	
	if(sys_tick == timp_reset)
		timere[--i].counter_initial = 0;	
}
  90:	95 b1       	in	r25, 0x05	; 5
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	89 27       	eor	r24, r25
  96:	85 b9       	out	0x05, r24	; 5
  98:	08 95       	ret

0000009a <pin_toggle_led1>:
  9a:	95 b1       	in	r25, 0x05	; 5
  9c:	82 e0       	ldi	r24, 0x02	; 2
  9e:	89 27       	eor	r24, r25
  a0:	85 b9       	out	0x05, r24	; 5
  a2:	08 95       	ret

000000a4 <pin_toggle_led2>:
  a4:	95 b1       	in	r25, 0x05	; 5
  a6:	84 e0       	ldi	r24, 0x04	; 4
  a8:	89 27       	eor	r24, r25
  aa:	85 b9       	out	0x05, r24	; 5
  ac:	08 95       	ret

000000ae <pin_toggle_led3>:
  ae:	95 b1       	in	r25, 0x05	; 5
  b0:	88 e0       	ldi	r24, 0x08	; 8
  b2:	89 27       	eor	r24, r25
  b4:	85 b9       	out	0x05, r24	; 5
  b6:	08 95       	ret

000000b8 <aprinde_led>:
  b8:	fc 01       	movw	r30, r24
  ba:	09 95       	icall
  bc:	08 95       	ret

000000be <creeaza_timer>:
  be:	8f 92       	push	r8
  c0:	9f 92       	push	r9
  c2:	af 92       	push	r10
  c4:	bf 92       	push	r11
  c6:	cf 92       	push	r12
  c8:	df 92       	push	r13
  ca:	ef 92       	push	r14
  cc:	ff 92       	push	r15
  ce:	0f 93       	push	r16
  d0:	1f 93       	push	r17
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	fc 01       	movw	r30, r24
  dc:	60 83       	st	Z, r22
  de:	41 83       	std	Z+1, r20	; 0x01
  e0:	22 83       	std	Z+2, r18	; 0x02
  e2:	e3 82       	std	Z+3, r14	; 0x03
  e4:	f4 82       	std	Z+4, r15	; 0x04
  e6:	05 83       	std	Z+5, r16	; 0x05
  e8:	16 83       	std	Z+6, r17	; 0x06
  ea:	a7 82       	std	Z+7, r10	; 0x07
  ec:	b0 86       	std	Z+8, r11	; 0x08
  ee:	c1 86       	std	Z+9, r12	; 0x09
  f0:	d2 86       	std	Z+10, r13	; 0x0a
  f2:	94 86       	std	Z+12, r9	; 0x0c
  f4:	83 86       	std	Z+11, r8	; 0x0b
  f6:	df 91       	pop	r29
  f8:	cf 91       	pop	r28
  fa:	1f 91       	pop	r17
  fc:	0f 91       	pop	r16
  fe:	ff 90       	pop	r15
 100:	ef 90       	pop	r14
 102:	df 90       	pop	r13
 104:	cf 90       	pop	r12
 106:	bf 90       	pop	r11
 108:	af 90       	pop	r10
 10a:	9f 90       	pop	r9
 10c:	8f 90       	pop	r8
 10e:	08 95       	ret

00000110 <evalueaza_timer>:
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <id_timer+0x1>
 11a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <id_timer>
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	10 c0       	rjmp	.+32     	; 0x144 <evalueaza_timer+0x34>
 124:	2d e0       	ldi	r18, 0x0D	; 13
 126:	28 9f       	mul	r18, r24
 128:	f0 01       	movw	r30, r0
 12a:	29 9f       	mul	r18, r25
 12c:	f0 0d       	add	r31, r0
 12e:	11 24       	eor	r1, r1
 130:	ea 5f       	subi	r30, 0xFA	; 250
 132:	fe 4f       	sbci	r31, 0xFE	; 254
 134:	20 81       	ld	r18, Z
 136:	21 11       	cpse	r18, r1
 138:	21 96       	adiw	r28, 0x01	; 1
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <id_timer+0x1>
 140:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <id_timer>
 144:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 148:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 14c:	85 30       	cpi	r24, 0x05	; 5
 14e:	91 05       	cpc	r25, r1
 150:	4c f3       	brlt	.-46     	; 0x124 <evalueaza_timer+0x14>
 152:	20 97       	sbiw	r28, 0x00	; 0
 154:	09 f4       	brne	.+2      	; 0x158 <evalueaza_timer+0x48>
 156:	81 c0       	rjmp	.+258    	; 0x25a <evalueaza_timer+0x14a>
 158:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	09 f0       	breq	.+2      	; 0x166 <evalueaza_timer+0x56>
 164:	7a c0       	rjmp	.+244    	; 0x25a <evalueaza_timer+0x14a>
 166:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <id_timer+0x1>
 16a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <id_timer>
 16e:	6d c0       	rjmp	.+218    	; 0x24a <evalueaza_timer+0x13a>
 170:	8d e0       	ldi	r24, 0x0D	; 13
 172:	82 9f       	mul	r24, r18
 174:	f0 01       	movw	r30, r0
 176:	83 9f       	mul	r24, r19
 178:	f0 0d       	add	r31, r0
 17a:	11 24       	eor	r1, r1
 17c:	ea 5f       	subi	r30, 0xFA	; 250
 17e:	fe 4f       	sbci	r31, 0xFE	; 254
 180:	83 81       	ldd	r24, Z+3	; 0x03
 182:	94 81       	ldd	r25, Z+4	; 0x04
 184:	a5 81       	ldd	r26, Z+5	; 0x05
 186:	b6 81       	ldd	r27, Z+6	; 0x06
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	a1 1d       	adc	r26, r1
 18c:	b1 1d       	adc	r27, r1
 18e:	83 83       	std	Z+3, r24	; 0x03
 190:	94 83       	std	Z+4, r25	; 0x04
 192:	a5 83       	std	Z+5, r26	; 0x05
 194:	b6 83       	std	Z+6, r27	; 0x06
 196:	47 81       	ldd	r20, Z+7	; 0x07
 198:	50 85       	ldd	r21, Z+8	; 0x08
 19a:	61 85       	ldd	r22, Z+9	; 0x09
 19c:	72 85       	ldd	r23, Z+10	; 0x0a
 19e:	84 17       	cp	r24, r20
 1a0:	95 07       	cpc	r25, r21
 1a2:	a6 07       	cpc	r26, r22
 1a4:	b7 07       	cpc	r27, r23
 1a6:	09 f0       	breq	.+2      	; 0x1aa <evalueaza_timer+0x9a>
 1a8:	47 c0       	rjmp	.+142    	; 0x238 <evalueaza_timer+0x128>
 1aa:	8d e0       	ldi	r24, 0x0D	; 13
 1ac:	82 9f       	mul	r24, r18
 1ae:	f0 01       	movw	r30, r0
 1b0:	83 9f       	mul	r24, r19
 1b2:	f0 0d       	add	r31, r0
 1b4:	11 24       	eor	r1, r1
 1b6:	ea 5f       	subi	r30, 0xFA	; 250
 1b8:	fe 4f       	sbci	r31, 0xFE	; 254
 1ba:	81 81       	ldd	r24, Z+1	; 0x01
 1bc:	81 30       	cpi	r24, 0x01	; 1
 1be:	e1 f5       	brne	.+120    	; 0x238 <evalueaza_timer+0x128>
 1c0:	1d e0       	ldi	r17, 0x0D	; 13
 1c2:	12 9f       	mul	r17, r18
 1c4:	f0 01       	movw	r30, r0
 1c6:	13 9f       	mul	r17, r19
 1c8:	f0 0d       	add	r31, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	ea 5f       	subi	r30, 0xFA	; 250
 1ce:	fe 4f       	sbci	r31, 0xFE	; 254
 1d0:	83 85       	ldd	r24, Z+11	; 0x0b
 1d2:	94 85       	ldd	r25, Z+12	; 0x0c
 1d4:	0e 94 5c 00 	call	0xb8	; 0xb8 <aprinde_led>
 1d8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 1dc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 1e0:	18 9f       	mul	r17, r24
 1e2:	f0 01       	movw	r30, r0
 1e4:	19 9f       	mul	r17, r25
 1e6:	f0 0d       	add	r31, r0
 1e8:	11 24       	eor	r1, r1
 1ea:	ea 5f       	subi	r30, 0xFA	; 250
 1ec:	fe 4f       	sbci	r31, 0xFE	; 254
 1ee:	22 e0       	ldi	r18, 0x02	; 2
 1f0:	21 83       	std	Z+1, r18	; 0x01
 1f2:	22 81       	ldd	r18, Z+2	; 0x02
 1f4:	21 30       	cpi	r18, 0x01	; 1
 1f6:	59 f4       	brne	.+22     	; 0x20e <evalueaza_timer+0xfe>
 1f8:	2d e0       	ldi	r18, 0x0D	; 13
 1fa:	28 9f       	mul	r18, r24
 1fc:	f0 01       	movw	r30, r0
 1fe:	29 9f       	mul	r18, r25
 200:	f0 0d       	add	r31, r0
 202:	11 24       	eor	r1, r1
 204:	ea 5f       	subi	r30, 0xFA	; 250
 206:	fe 4f       	sbci	r31, 0xFE	; 254
 208:	21 e0       	ldi	r18, 0x01	; 1
 20a:	21 83       	std	Z+1, r18	; 0x01
 20c:	09 c0       	rjmp	.+18     	; 0x220 <evalueaza_timer+0x110>
 20e:	2d e0       	ldi	r18, 0x0D	; 13
 210:	28 9f       	mul	r18, r24
 212:	f0 01       	movw	r30, r0
 214:	29 9f       	mul	r18, r25
 216:	f0 0d       	add	r31, r0
 218:	11 24       	eor	r1, r1
 21a:	ea 5f       	subi	r30, 0xFA	; 250
 21c:	fe 4f       	sbci	r31, 0xFE	; 254
 21e:	11 82       	std	Z+1, r1	; 0x01
 220:	2d e0       	ldi	r18, 0x0D	; 13
 222:	28 9f       	mul	r18, r24
 224:	f0 01       	movw	r30, r0
 226:	29 9f       	mul	r18, r25
 228:	f0 0d       	add	r31, r0
 22a:	11 24       	eor	r1, r1
 22c:	ea 5f       	subi	r30, 0xFA	; 250
 22e:	fe 4f       	sbci	r31, 0xFE	; 254
 230:	13 82       	std	Z+3, r1	; 0x03
 232:	14 82       	std	Z+4, r1	; 0x04
 234:	15 82       	std	Z+5, r1	; 0x05
 236:	16 82       	std	Z+6, r1	; 0x06
 238:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <id_timer>
 23c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <id_timer+0x1>
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <id_timer+0x1>
 246:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <id_timer>
 24a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <id_timer>
 24e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <id_timer+0x1>
 252:	c2 17       	cp	r28, r18
 254:	d3 07       	cpc	r29, r19
 256:	0c f0       	brlt	.+2      	; 0x25a <evalueaza_timer+0x14a>
 258:	8b cf       	rjmp	.-234    	; 0x170 <evalueaza_timer+0x60>
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	08 95       	ret

00000262 <update_timer>:
 262:	8f 92       	push	r8
 264:	9f 92       	push	r9
 266:	af 92       	push	r10
 268:	bf 92       	push	r11
 26a:	cf 92       	push	r12
 26c:	df 92       	push	r13
 26e:	ef 92       	push	r14
 270:	ff 92       	push	r15
 272:	0f 93       	push	r16
 274:	1f 93       	push	r17
 276:	80 90 47 01 	lds	r8, 0x0147	; 0x800147 <sys_tick>
 27a:	90 90 48 01 	lds	r9, 0x0148	; 0x800148 <sys_tick+0x1>
 27e:	a0 90 49 01 	lds	r10, 0x0149	; 0x800149 <sys_tick+0x2>
 282:	b0 90 4a 01 	lds	r11, 0x014A	; 0x80014a <sys_tick+0x3>
 286:	8c 14       	cp	r8, r12
 288:	9d 04       	cpc	r9, r13
 28a:	ae 04       	cpc	r10, r14
 28c:	bf 04       	cpc	r11, r15
 28e:	71 f5       	brne	.+92     	; 0x2ec <update_timer+0x8a>
 290:	dc 01       	movw	r26, r24
 292:	11 97       	sbiw	r26, 0x01	; 1
 294:	5d e0       	ldi	r21, 0x0D	; 13
 296:	5a 9f       	mul	r21, r26
 298:	f0 01       	movw	r30, r0
 29a:	5b 9f       	mul	r21, r27
 29c:	f0 0d       	add	r31, r0
 29e:	11 24       	eor	r1, r1
 2a0:	ea 5f       	subi	r30, 0xFA	; 250
 2a2:	fe 4f       	sbci	r31, 0xFE	; 254
 2a4:	13 82       	std	Z+3, r1	; 0x03
 2a6:	14 82       	std	Z+4, r1	; 0x04
 2a8:	15 82       	std	Z+5, r1	; 0x05
 2aa:	16 82       	std	Z+6, r1	; 0x06
 2ac:	11 97       	sbiw	r26, 0x01	; 1
 2ae:	5a 9f       	mul	r21, r26
 2b0:	f0 01       	movw	r30, r0
 2b2:	5b 9f       	mul	r21, r27
 2b4:	f0 0d       	add	r31, r0
 2b6:	11 24       	eor	r1, r1
 2b8:	ea 5f       	subi	r30, 0xFA	; 250
 2ba:	fe 4f       	sbci	r31, 0xFE	; 254
 2bc:	61 83       	std	Z+1, r22	; 0x01
 2be:	bc 01       	movw	r22, r24
 2c0:	63 50       	subi	r22, 0x03	; 3
 2c2:	71 09       	sbc	r23, r1
 2c4:	56 9f       	mul	r21, r22
 2c6:	f0 01       	movw	r30, r0
 2c8:	57 9f       	mul	r21, r23
 2ca:	f0 0d       	add	r31, r0
 2cc:	11 24       	eor	r1, r1
 2ce:	ea 5f       	subi	r30, 0xFA	; 250
 2d0:	fe 4f       	sbci	r31, 0xFE	; 254
 2d2:	42 83       	std	Z+2, r20	; 0x02
 2d4:	04 97       	sbiw	r24, 0x04	; 4
 2d6:	58 9f       	mul	r21, r24
 2d8:	f0 01       	movw	r30, r0
 2da:	59 9f       	mul	r21, r25
 2dc:	f0 0d       	add	r31, r0
 2de:	11 24       	eor	r1, r1
 2e0:	ea 5f       	subi	r30, 0xFA	; 250
 2e2:	fe 4f       	sbci	r31, 0xFE	; 254
 2e4:	07 83       	std	Z+7, r16	; 0x07
 2e6:	10 87       	std	Z+8, r17	; 0x08
 2e8:	21 87       	std	Z+9, r18	; 0x09
 2ea:	32 87       	std	Z+10, r19	; 0x0a
 2ec:	1f 91       	pop	r17
 2ee:	0f 91       	pop	r16
 2f0:	ff 90       	pop	r15
 2f2:	ef 90       	pop	r14
 2f4:	df 90       	pop	r13
 2f6:	cf 90       	pop	r12
 2f8:	bf 90       	pop	r11
 2fa:	af 90       	pop	r10
 2fc:	9f 90       	pop	r9
 2fe:	8f 90       	pop	r8
 300:	08 95       	ret

00000302 <__vector_14>:

ISR(TIMER0_COMPA_vect){ 
 302:	1f 92       	push	r1
 304:	0f 92       	push	r0
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	0f 92       	push	r0
 30a:	11 24       	eor	r1, r1
 30c:	8f 93       	push	r24
 30e:	9f 93       	push	r25
 310:	af 93       	push	r26
 312:	bf 93       	push	r27
	
	cli();
 314:	f8 94       	cli
	
	sys_tick++;
 316:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <sys_tick>
 31a:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <sys_tick+0x1>
 31e:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <sys_tick+0x2>
 322:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <sys_tick+0x3>
 326:	01 96       	adiw	r24, 0x01	; 1
 328:	a1 1d       	adc	r26, r1
 32a:	b1 1d       	adc	r27, r1
 32c:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <sys_tick>
 330:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <sys_tick+0x1>
 334:	a0 93 49 01 	sts	0x0149, r26	; 0x800149 <sys_tick+0x2>
 338:	b0 93 4a 01 	sts	0x014A, r27	; 0x80014a <sys_tick+0x3>
	flag = 1;     
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <flag+0x1>
 344:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <flag>
	counter_timp = 1;
 348:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 34c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	sei();
 350:	78 94       	sei
}
 352:	bf 91       	pop	r27
 354:	af 91       	pop	r26
 356:	9f 91       	pop	r25
 358:	8f 91       	pop	r24
 35a:	0f 90       	pop	r0
 35c:	0f be       	out	0x3f, r0	; 63
 35e:	0f 90       	pop	r0
 360:	1f 90       	pop	r1
 362:	18 95       	reti

00000364 <port_init>:

#include <stdio.h>

void port_init(void){
	
	DDRB = 0x0F;                          //00001111
 364:	8f e0       	ldi	r24, 0x0F	; 15
 366:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
 368:	15 b8       	out	0x05, r1	; 5
	DDRD |= (1 << PIND2) | (1 << PIND3);  //INT0 & INT1
 36a:	8a b1       	in	r24, 0x0a	; 10
 36c:	8c 60       	ori	r24, 0x0C	; 12
 36e:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << PIND2) | (1 << PIND3);
 370:	8b b1       	in	r24, 0x0b	; 11
 372:	8c 60       	ori	r24, 0x0C	; 12
 374:	8b b9       	out	0x0b, r24	; 11
 376:	08 95       	ret

00000378 <interrupt_init>:
}

void interrupt_init(void){
	
	EICRA |= (1 << ISC11) | (1 << ISC10) | (1 << ISC01) | (1 << ISC00);
 378:	e9 e6       	ldi	r30, 0x69	; 105
 37a:	f0 e0       	ldi	r31, 0x00	; 0
 37c:	80 81       	ld	r24, Z
 37e:	8f 60       	ori	r24, 0x0F	; 15
 380:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1) | (1 << INT0);
 382:	8d b3       	in	r24, 0x1d	; 29
 384:	83 60       	ori	r24, 0x03	; 3
 386:	8d bb       	out	0x1d, r24	; 29
	EIFR |= (0 << INTF1) | (0 << INTF0);
 388:	8c b3       	in	r24, 0x1c	; 28
 38a:	8c bb       	out	0x1c, r24	; 28
	PCICR |= (0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
 38c:	e8 e6       	ldi	r30, 0x68	; 104
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	80 81       	ld	r24, Z
 392:	80 83       	st	Z, r24
 394:	08 95       	ret

00000396 <init_devices>:
}

void init_devices(void){
	
	cli();
 396:	f8 94       	cli
	
	port_init();
 398:	0e 94 b2 01 	call	0x364	; 0x364 <port_init>
	interrupt_init();
 39c:	0e 94 bc 01 	call	0x378	; 0x378 <interrupt_init>
	timer0_init();
 3a0:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <timer0_init>
	
	sei();
 3a4:	78 94       	sei
 3a6:	08 95       	ret

000003a8 <main>:

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void){
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	cd b7       	in	r28, 0x3d	; 61
 3ae:	de b7       	in	r29, 0x3e	; 62
 3b0:	2d 97       	sbiw	r28, 0x0d	; 13
 3b2:	0f b6       	in	r0, 0x3f	; 63
 3b4:	f8 94       	cli
 3b6:	de bf       	out	0x3e, r29	; 62
 3b8:	0f be       	out	0x3f, r0	; 63
 3ba:	cd bf       	out	0x3d, r28	; 61
	
	init_devices();	//porturi, timer, intreruperi
 3bc:	0e 94 cb 01 	call	0x396	; 0x396 <init_devices>
	start_timer0(); 
 3c0:	0e 94 87 02 	call	0x50e	; 0x50e <start_timer0>
	
                           //(ID, STARE, AUTORESET, VAL INI, PERIOADA, FUNCTIE)
	timere[0] = creeaza_timer(1, PORNIT, TRUE, 0, 2000, pin_toggle_led0);
 3c4:	0f 2e       	mov	r0, r31
 3c6:	f8 e4       	ldi	r31, 0x48	; 72
 3c8:	8f 2e       	mov	r8, r31
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	9f 2e       	mov	r9, r31
 3ce:	f0 2d       	mov	r31, r0
 3d0:	0f 2e       	mov	r0, r31
 3d2:	f0 ed       	ldi	r31, 0xD0	; 208
 3d4:	af 2e       	mov	r10, r31
 3d6:	f7 e0       	ldi	r31, 0x07	; 7
 3d8:	bf 2e       	mov	r11, r31
 3da:	c1 2c       	mov	r12, r1
 3dc:	d1 2c       	mov	r13, r1
 3de:	f0 2d       	mov	r31, r0
 3e0:	e1 2c       	mov	r14, r1
 3e2:	f1 2c       	mov	r15, r1
 3e4:	87 01       	movw	r16, r14
 3e6:	21 e0       	ldi	r18, 0x01	; 1
 3e8:	41 e0       	ldi	r20, 0x01	; 1
 3ea:	61 e0       	ldi	r22, 0x01	; 1
 3ec:	ce 01       	movw	r24, r28
 3ee:	01 96       	adiw	r24, 0x01	; 1
 3f0:	0e 94 5f 00 	call	0xbe	; 0xbe <creeaza_timer>
 3f4:	8d e0       	ldi	r24, 0x0D	; 13
 3f6:	fe 01       	movw	r30, r28
 3f8:	31 96       	adiw	r30, 0x01	; 1
 3fa:	a6 e0       	ldi	r26, 0x06	; 6
 3fc:	b1 e0       	ldi	r27, 0x01	; 1
 3fe:	01 90       	ld	r0, Z+
 400:	0d 92       	st	X+, r0
 402:	8a 95       	dec	r24
 404:	e1 f7       	brne	.-8      	; 0x3fe <main+0x56>
	timere[1] = creeaza_timer(2, PORNIT, FALSE, 0, 3000, pin_toggle_led1);
 406:	0f 2e       	mov	r0, r31
 408:	fd e4       	ldi	r31, 0x4D	; 77
 40a:	8f 2e       	mov	r8, r31
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	9f 2e       	mov	r9, r31
 410:	f0 2d       	mov	r31, r0
 412:	0f 2e       	mov	r0, r31
 414:	f8 eb       	ldi	r31, 0xB8	; 184
 416:	af 2e       	mov	r10, r31
 418:	fb e0       	ldi	r31, 0x0B	; 11
 41a:	bf 2e       	mov	r11, r31
 41c:	c1 2c       	mov	r12, r1
 41e:	d1 2c       	mov	r13, r1
 420:	f0 2d       	mov	r31, r0
 422:	20 e0       	ldi	r18, 0x00	; 0
 424:	41 e0       	ldi	r20, 0x01	; 1
 426:	62 e0       	ldi	r22, 0x02	; 2
 428:	ce 01       	movw	r24, r28
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	0e 94 5f 00 	call	0xbe	; 0xbe <creeaza_timer>
 430:	8d e0       	ldi	r24, 0x0D	; 13
 432:	fe 01       	movw	r30, r28
 434:	31 96       	adiw	r30, 0x01	; 1
 436:	a3 e1       	ldi	r26, 0x13	; 19
 438:	b1 e0       	ldi	r27, 0x01	; 1
 43a:	01 90       	ld	r0, Z+
 43c:	0d 92       	st	X+, r0
 43e:	8a 95       	dec	r24
 440:	e1 f7       	brne	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
	timere[2] = creeaza_timer(3, PORNIT, TRUE, 0, 5000, pin_toggle_led2);
 442:	0f 2e       	mov	r0, r31
 444:	f2 e5       	ldi	r31, 0x52	; 82
 446:	8f 2e       	mov	r8, r31
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	9f 2e       	mov	r9, r31
 44c:	f0 2d       	mov	r31, r0
 44e:	0f 2e       	mov	r0, r31
 450:	f8 e8       	ldi	r31, 0x88	; 136
 452:	af 2e       	mov	r10, r31
 454:	f3 e1       	ldi	r31, 0x13	; 19
 456:	bf 2e       	mov	r11, r31
 458:	c1 2c       	mov	r12, r1
 45a:	d1 2c       	mov	r13, r1
 45c:	f0 2d       	mov	r31, r0
 45e:	21 e0       	ldi	r18, 0x01	; 1
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	63 e0       	ldi	r22, 0x03	; 3
 464:	ce 01       	movw	r24, r28
 466:	01 96       	adiw	r24, 0x01	; 1
 468:	0e 94 5f 00 	call	0xbe	; 0xbe <creeaza_timer>
 46c:	8d e0       	ldi	r24, 0x0D	; 13
 46e:	fe 01       	movw	r30, r28
 470:	31 96       	adiw	r30, 0x01	; 1
 472:	a0 e2       	ldi	r26, 0x20	; 32
 474:	b1 e0       	ldi	r27, 0x01	; 1
 476:	01 90       	ld	r0, Z+
 478:	0d 92       	st	X+, r0
 47a:	8a 95       	dec	r24
 47c:	e1 f7       	brne	.-8      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
	timere[3] = creeaza_timer(4, PORNIT, TRUE, 0, 10000, pin_toggle_led3);
 47e:	0f 2e       	mov	r0, r31
 480:	f7 e5       	ldi	r31, 0x57	; 87
 482:	8f 2e       	mov	r8, r31
 484:	f0 e0       	ldi	r31, 0x00	; 0
 486:	9f 2e       	mov	r9, r31
 488:	f0 2d       	mov	r31, r0
 48a:	0f 2e       	mov	r0, r31
 48c:	f0 e1       	ldi	r31, 0x10	; 16
 48e:	af 2e       	mov	r10, r31
 490:	f7 e2       	ldi	r31, 0x27	; 39
 492:	bf 2e       	mov	r11, r31
 494:	c1 2c       	mov	r12, r1
 496:	d1 2c       	mov	r13, r1
 498:	f0 2d       	mov	r31, r0
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	41 e0       	ldi	r20, 0x01	; 1
 49e:	64 e0       	ldi	r22, 0x04	; 4
 4a0:	ce 01       	movw	r24, r28
 4a2:	01 96       	adiw	r24, 0x01	; 1
 4a4:	0e 94 5f 00 	call	0xbe	; 0xbe <creeaza_timer>
 4a8:	8d e0       	ldi	r24, 0x0D	; 13
 4aa:	fe 01       	movw	r30, r28
 4ac:	31 96       	adiw	r30, 0x01	; 1
 4ae:	ad e2       	ldi	r26, 0x2D	; 45
 4b0:	b1 e0       	ldi	r27, 0x01	; 1
 4b2:	01 90       	ld	r0, Z+
 4b4:	0d 92       	st	X+, r0
 4b6:	8a 95       	dec	r24
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>

	do
	{	
		if(flag == 1)
 4ba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <flag>
 4be:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <flag+0x1>
 4c2:	01 97       	sbiw	r24, 0x01	; 1
 4c4:	d1 f7       	brne	.-12     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
		{
			flag = 0;
 4c6:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <flag+0x1>
 4ca:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <flag>
			evalueaza_timer();	
 4ce:	0e 94 88 00 	call	0x110	; 0x110 <evalueaza_timer>
			
			//reset_timer(2, 2000);
			
			update_timer(2, PORNIT, TRUE, 3000, 10000);
 4d2:	0f 2e       	mov	r0, r31
 4d4:	f0 e1       	ldi	r31, 0x10	; 16
 4d6:	cf 2e       	mov	r12, r31
 4d8:	f7 e2       	ldi	r31, 0x27	; 39
 4da:	df 2e       	mov	r13, r31
 4dc:	e1 2c       	mov	r14, r1
 4de:	f1 2c       	mov	r15, r1
 4e0:	f0 2d       	mov	r31, r0
 4e2:	08 eb       	ldi	r16, 0xB8	; 184
 4e4:	1b e0       	ldi	r17, 0x0B	; 11
 4e6:	20 e0       	ldi	r18, 0x00	; 0
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	41 e0       	ldi	r20, 0x01	; 1
 4ec:	61 e0       	ldi	r22, 0x01	; 1
 4ee:	82 e0       	ldi	r24, 0x02	; 2
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 31 01 	call	0x262	; 0x262 <update_timer>
 4f6:	e1 cf       	rjmp	.-62     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>

000004f8 <timer0_init>:
 */ 
#include "timer0_def.h"

void timer0_init(void){
	
	TCCR0A |= (1 << WGM01) | (0 << WGM00);  //modul CTC
 4f8:	84 b5       	in	r24, 0x24	; 36
 4fa:	82 60       	ori	r24, 0x02	; 2
 4fc:	84 bd       	out	0x24, r24	; 36
	OCR0A = 0xF9;
 4fe:	89 ef       	ldi	r24, 0xF9	; 249
 500:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
 502:	ee e6       	ldi	r30, 0x6E	; 110
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	82 60       	ori	r24, 0x02	; 2
 50a:	80 83       	st	Z, r24
 50c:	08 95       	ret

0000050e <start_timer0>:
}

void start_timer0(){
	TCCR0B |= START_TIMER0;
 50e:	85 b5       	in	r24, 0x25	; 37
 510:	83 60       	ori	r24, 0x03	; 3
 512:	85 bd       	out	0x25, r24	; 37
 514:	08 95       	ret

00000516 <_exit>:
 516:	f8 94       	cli

00000518 <__stop_program>:
 518:	ff cf       	rjmp	.-2      	; 0x518 <__stop_program>
