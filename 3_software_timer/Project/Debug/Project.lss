
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000442  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800100  00800100  000004b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f59  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a2f  00000000  00000000  00001569  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006e2  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  0000267c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000594  00000000  00000000  0000285c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000039c  00000000  00000000  00002df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000318c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ab 34       	cpi	r26, 0x4B	; 75
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 a2 01 	call	0x344	; 0x344 <main>
  88:	0c 94 1f 02 	jmp	0x43e	; 0x43e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pin_toggle_led0>:
	t.stare = var_stare;
	t.autoreset = var_autoreset;
	t.perioada = perioada;	
	
	return t; 
}
  90:	95 b1       	in	r25, 0x05	; 5
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	98 27       	eor	r25, r24
  96:	95 b9       	out	0x05, r25	; 5
  98:	2f ef       	ldi	r18, 0xFF	; 255
  9a:	39 e6       	ldi	r19, 0x69	; 105
  9c:	98 e1       	ldi	r25, 0x18	; 24
  9e:	21 50       	subi	r18, 0x01	; 1
  a0:	30 40       	sbci	r19, 0x00	; 0
  a2:	90 40       	sbci	r25, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <pin_toggle_led0+0xe>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <pin_toggle_led0+0x18>
  a8:	00 00       	nop
  aa:	95 b1       	in	r25, 0x05	; 5
  ac:	89 27       	eor	r24, r25
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <pin_toggle_led1>:
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	98 27       	eor	r25, r24
  b8:	95 b9       	out	0x05, r25	; 5
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	39 e6       	ldi	r19, 0x69	; 105
  be:	98 e1       	ldi	r25, 0x18	; 24
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	30 40       	sbci	r19, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <pin_toggle_led1+0xe>
  c8:	00 c0       	rjmp	.+0      	; 0xca <pin_toggle_led1+0x18>
  ca:	00 00       	nop
  cc:	95 b1       	in	r25, 0x05	; 5
  ce:	89 27       	eor	r24, r25
  d0:	85 b9       	out	0x05, r24	; 5
  d2:	08 95       	ret

000000d4 <pin_toggle_led2>:
  d4:	95 b1       	in	r25, 0x05	; 5
  d6:	84 e0       	ldi	r24, 0x04	; 4
  d8:	98 27       	eor	r25, r24
  da:	95 b9       	out	0x05, r25	; 5
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	39 e6       	ldi	r19, 0x69	; 105
  e0:	98 e1       	ldi	r25, 0x18	; 24
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	30 40       	sbci	r19, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <pin_toggle_led2+0xe>
  ea:	00 c0       	rjmp	.+0      	; 0xec <pin_toggle_led2+0x18>
  ec:	00 00       	nop
  ee:	95 b1       	in	r25, 0x05	; 5
  f0:	89 27       	eor	r24, r25
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	08 95       	ret

000000f6 <aprinde_led>:
  f6:	fc 01       	movw	r30, r24
  f8:	09 95       	icall
  fa:	08 95       	ret

000000fc <creeaza_timer>:
  fc:	8f 92       	push	r8
  fe:	9f 92       	push	r9
 100:	af 92       	push	r10
 102:	bf 92       	push	r11
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62
 118:	fc 01       	movw	r30, r24
 11a:	60 83       	st	Z, r22
 11c:	41 83       	std	Z+1, r20	; 0x01
 11e:	22 83       	std	Z+2, r18	; 0x02
 120:	e3 82       	std	Z+3, r14	; 0x03
 122:	f4 82       	std	Z+4, r15	; 0x04
 124:	05 83       	std	Z+5, r16	; 0x05
 126:	16 83       	std	Z+6, r17	; 0x06
 128:	a7 82       	std	Z+7, r10	; 0x07
 12a:	b0 86       	std	Z+8, r11	; 0x08
 12c:	c1 86       	std	Z+9, r12	; 0x09
 12e:	d2 86       	std	Z+10, r13	; 0x0a
 130:	94 86       	std	Z+12, r9	; 0x0c
 132:	83 86       	std	Z+11, r8	; 0x0b
 134:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sys_tick>
 138:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sys_tick+0x1>
 13c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <counter_curent+0x1>
 140:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <counter_curent>
 144:	cf 01       	movw	r24, r30
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	1f 91       	pop	r17
 14c:	0f 91       	pop	r16
 14e:	ff 90       	pop	r15
 150:	ef 90       	pop	r14
 152:	df 90       	pop	r13
 154:	cf 90       	pop	r12
 156:	bf 90       	pop	r11
 158:	af 90       	pop	r10
 15a:	9f 90       	pop	r9
 15c:	8f 90       	pop	r8
 15e:	08 95       	ret

00000160 <evalueaza_timer>:
 160:	1f 93       	push	r17
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <id_timer+0x1>
 16a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <id_timer>
 16e:	c0 e0       	ldi	r28, 0x00	; 0
 170:	d0 e0       	ldi	r29, 0x00	; 0
 172:	1c c0       	rjmp	.+56     	; 0x1ac <evalueaza_timer+0x4c>
 174:	2d e0       	ldi	r18, 0x0D	; 13
 176:	28 9f       	mul	r18, r24
 178:	f0 01       	movw	r30, r0
 17a:	29 9f       	mul	r18, r25
 17c:	f0 0d       	add	r31, r0
 17e:	11 24       	eor	r1, r1
 180:	e6 5f       	subi	r30, 0xF6	; 246
 182:	fe 4f       	sbci	r31, 0xFE	; 254
 184:	20 81       	ld	r18, Z
 186:	22 23       	and	r18, r18
 188:	61 f0       	breq	.+24     	; 0x1a2 <evalueaza_timer+0x42>
 18a:	2d e0       	ldi	r18, 0x0D	; 13
 18c:	28 9f       	mul	r18, r24
 18e:	f0 01       	movw	r30, r0
 190:	29 9f       	mul	r18, r25
 192:	f0 0d       	add	r31, r0
 194:	11 24       	eor	r1, r1
 196:	e6 5f       	subi	r30, 0xF6	; 246
 198:	fe 4f       	sbci	r31, 0xFE	; 254
 19a:	21 81       	ldd	r18, Z+1	; 0x01
 19c:	21 30       	cpi	r18, 0x01	; 1
 19e:	09 f4       	brne	.+2      	; 0x1a2 <evalueaza_timer+0x42>
 1a0:	21 96       	adiw	r28, 0x01	; 1
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <id_timer+0x1>
 1a8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <id_timer>
 1ac:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 1b0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 1b4:	85 30       	cpi	r24, 0x05	; 5
 1b6:	91 05       	cpc	r25, r1
 1b8:	ec f2       	brlt	.-70     	; 0x174 <evalueaza_timer+0x14>
 1ba:	20 97       	sbiw	r28, 0x00	; 0
 1bc:	09 f4       	brne	.+2      	; 0x1c0 <evalueaza_timer+0x60>
 1be:	75 c0       	rjmp	.+234    	; 0x2aa <evalueaza_timer+0x14a>
 1c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	09 f0       	breq	.+2      	; 0x1ce <evalueaza_timer+0x6e>
 1cc:	6e c0       	rjmp	.+220    	; 0x2aa <evalueaza_timer+0x14a>
 1ce:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <id_timer+0x1>
 1d2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <id_timer>
 1d6:	61 c0       	rjmp	.+194    	; 0x29a <evalueaza_timer+0x13a>
 1d8:	8d e0       	ldi	r24, 0x0D	; 13
 1da:	82 9f       	mul	r24, r18
 1dc:	f0 01       	movw	r30, r0
 1de:	83 9f       	mul	r24, r19
 1e0:	f0 0d       	add	r31, r0
 1e2:	11 24       	eor	r1, r1
 1e4:	e6 5f       	subi	r30, 0xF6	; 246
 1e6:	fe 4f       	sbci	r31, 0xFE	; 254
 1e8:	83 81       	ldd	r24, Z+3	; 0x03
 1ea:	94 81       	ldd	r25, Z+4	; 0x04
 1ec:	a5 81       	ldd	r26, Z+5	; 0x05
 1ee:	b6 81       	ldd	r27, Z+6	; 0x06
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	a1 1d       	adc	r26, r1
 1f4:	b1 1d       	adc	r27, r1
 1f6:	83 83       	std	Z+3, r24	; 0x03
 1f8:	94 83       	std	Z+4, r25	; 0x04
 1fa:	a5 83       	std	Z+5, r26	; 0x05
 1fc:	b6 83       	std	Z+6, r27	; 0x06
 1fe:	47 81       	ldd	r20, Z+7	; 0x07
 200:	50 85       	ldd	r21, Z+8	; 0x08
 202:	61 85       	ldd	r22, Z+9	; 0x09
 204:	72 85       	ldd	r23, Z+10	; 0x0a
 206:	84 17       	cp	r24, r20
 208:	95 07       	cpc	r25, r21
 20a:	a6 07       	cpc	r26, r22
 20c:	b7 07       	cpc	r27, r23
 20e:	e1 f5       	brne	.+120    	; 0x288 <evalueaza_timer+0x128>
 210:	1d e0       	ldi	r17, 0x0D	; 13
 212:	12 9f       	mul	r17, r18
 214:	f0 01       	movw	r30, r0
 216:	13 9f       	mul	r17, r19
 218:	f0 0d       	add	r31, r0
 21a:	11 24       	eor	r1, r1
 21c:	e6 5f       	subi	r30, 0xF6	; 246
 21e:	fe 4f       	sbci	r31, 0xFE	; 254
 220:	83 85       	ldd	r24, Z+11	; 0x0b
 222:	94 85       	ldd	r25, Z+12	; 0x0c
 224:	0e 94 7b 00 	call	0xf6	; 0xf6 <aprinde_led>
 228:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 22c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 230:	18 9f       	mul	r17, r24
 232:	f0 01       	movw	r30, r0
 234:	19 9f       	mul	r17, r25
 236:	f0 0d       	add	r31, r0
 238:	11 24       	eor	r1, r1
 23a:	e6 5f       	subi	r30, 0xF6	; 246
 23c:	fe 4f       	sbci	r31, 0xFE	; 254
 23e:	22 e0       	ldi	r18, 0x02	; 2
 240:	21 83       	std	Z+1, r18	; 0x01
 242:	22 81       	ldd	r18, Z+2	; 0x02
 244:	21 30       	cpi	r18, 0x01	; 1
 246:	59 f4       	brne	.+22     	; 0x25e <evalueaza_timer+0xfe>
 248:	2d e0       	ldi	r18, 0x0D	; 13
 24a:	28 9f       	mul	r18, r24
 24c:	f0 01       	movw	r30, r0
 24e:	29 9f       	mul	r18, r25
 250:	f0 0d       	add	r31, r0
 252:	11 24       	eor	r1, r1
 254:	e6 5f       	subi	r30, 0xF6	; 246
 256:	fe 4f       	sbci	r31, 0xFE	; 254
 258:	21 e0       	ldi	r18, 0x01	; 1
 25a:	21 83       	std	Z+1, r18	; 0x01
 25c:	09 c0       	rjmp	.+18     	; 0x270 <evalueaza_timer+0x110>
 25e:	2d e0       	ldi	r18, 0x0D	; 13
 260:	28 9f       	mul	r18, r24
 262:	f0 01       	movw	r30, r0
 264:	29 9f       	mul	r18, r25
 266:	f0 0d       	add	r31, r0
 268:	11 24       	eor	r1, r1
 26a:	e6 5f       	subi	r30, 0xF6	; 246
 26c:	fe 4f       	sbci	r31, 0xFE	; 254
 26e:	11 82       	std	Z+1, r1	; 0x01
 270:	2d e0       	ldi	r18, 0x0D	; 13
 272:	28 9f       	mul	r18, r24
 274:	f0 01       	movw	r30, r0
 276:	29 9f       	mul	r18, r25
 278:	f0 0d       	add	r31, r0
 27a:	11 24       	eor	r1, r1
 27c:	e6 5f       	subi	r30, 0xF6	; 246
 27e:	fe 4f       	sbci	r31, 0xFE	; 254
 280:	13 82       	std	Z+3, r1	; 0x03
 282:	14 82       	std	Z+4, r1	; 0x04
 284:	15 82       	std	Z+5, r1	; 0x05
 286:	16 82       	std	Z+6, r1	; 0x06
 288:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 28c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <id_timer+0x1>
 296:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <id_timer>
 29a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <id_timer>
 29e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <id_timer+0x1>
 2a2:	2c 17       	cp	r18, r28
 2a4:	3d 07       	cpc	r19, r29
 2a6:	0c f4       	brge	.+2      	; 0x2aa <evalueaza_timer+0x14a>
 2a8:	97 cf       	rjmp	.-210    	; 0x1d8 <evalueaza_timer+0x78>
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	1f 91       	pop	r17
 2b0:	08 95       	ret

000002b2 <start_evaluare>:
 2b2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <flag>
 2b6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <flag+0x1>
 2ba:	01 97       	sbiw	r24, 0x01	; 1
 2bc:	31 f4       	brne	.+12     	; 0x2ca <start_evaluare+0x18>
 2be:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flag+0x1>
 2c2:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <flag>
 2c6:	0e 94 b0 00 	call	0x160	; 0x160 <evalueaza_timer>
 2ca:	08 95       	ret

000002cc <__vector_14>:

ISR(TIMER0_COMPA_vect){ 
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	8f 93       	push	r24
 2d8:	9f 93       	push	r25
	
	cli();
 2da:	f8 94       	cli
		
	flag = 1;
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <flag+0x1>
 2e4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <flag>
	counter_timp = 1;
 2e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	sei();
 2f0:	78 94       	sei
}
 2f2:	9f 91       	pop	r25
 2f4:	8f 91       	pop	r24
 2f6:	0f 90       	pop	r0
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	0f 90       	pop	r0
 2fc:	1f 90       	pop	r1
 2fe:	18 95       	reti

00000300 <port_init>:

#include <stdio.h>

void port_init(void){
	
	DDRB = 0x0F;   //00001111
 300:	8f e0       	ldi	r24, 0x0F	; 15
 302:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
 304:	15 b8       	out	0x05, r1	; 5
	DDRD |= (1 << PIND2) | (1 << PIND3);  //INT0 & INT1
 306:	8a b1       	in	r24, 0x0a	; 10
 308:	8c 60       	ori	r24, 0x0C	; 12
 30a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << PIND2) | (1 << PIND3);
 30c:	8b b1       	in	r24, 0x0b	; 11
 30e:	8c 60       	ori	r24, 0x0C	; 12
 310:	8b b9       	out	0x0b, r24	; 11
 312:	08 95       	ret

00000314 <interrupt_init>:
}

void interrupt_init(void){
	
	EICRA |= (1 << ISC11) | (1 << ISC10) | (1 << ISC01) | (1 << ISC00);
 314:	e9 e6       	ldi	r30, 0x69	; 105
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	8f 60       	ori	r24, 0x0F	; 15
 31c:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1) | (1 << INT0);
 31e:	8d b3       	in	r24, 0x1d	; 29
 320:	83 60       	ori	r24, 0x03	; 3
 322:	8d bb       	out	0x1d, r24	; 29
	EIFR |= (0 << INTF1) | (0 << INTF0);
 324:	8c b3       	in	r24, 0x1c	; 28
 326:	8c bb       	out	0x1c, r24	; 28
	PCICR |= (0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
 328:	e8 e6       	ldi	r30, 0x68	; 104
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	80 83       	st	Z, r24
 330:	08 95       	ret

00000332 <init_devices>:
}

void init_devices(void){
	
	cli();
 332:	f8 94       	cli
	
	port_init();
 334:	0e 94 80 01 	call	0x300	; 0x300 <port_init>
	interrupt_init();
 338:	0e 94 8a 01 	call	0x314	; 0x314 <interrupt_init>
	timer0_init();
 33c:	0e 94 10 02 	call	0x420	; 0x420 <timer0_init>
	
	sei();
 340:	78 94       	sei
 342:	08 95       	ret

00000344 <main>:

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void){
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62
 34c:	2d 97       	sbiw	r28, 0x0d	; 13
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	de bf       	out	0x3e, r29	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	cd bf       	out	0x3d, r28	; 61
	
	init_devices();	//porturi, timer, intreruperi
 358:	0e 94 99 01 	call	0x332	; 0x332 <init_devices>
	start_timer0(); 
 35c:	0e 94 1b 02 	call	0x436	; 0x436 <start_timer0>
	
	//int upd = 0;
	
	timere[0] = creeaza_timer(1, PORNIT, TRUE, 0, 2000, pin_toggle_led0);
 360:	0f 2e       	mov	r0, r31
 362:	f8 e4       	ldi	r31, 0x48	; 72
 364:	8f 2e       	mov	r8, r31
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	9f 2e       	mov	r9, r31
 36a:	f0 2d       	mov	r31, r0
 36c:	0f 2e       	mov	r0, r31
 36e:	f0 ed       	ldi	r31, 0xD0	; 208
 370:	af 2e       	mov	r10, r31
 372:	f7 e0       	ldi	r31, 0x07	; 7
 374:	bf 2e       	mov	r11, r31
 376:	c1 2c       	mov	r12, r1
 378:	d1 2c       	mov	r13, r1
 37a:	f0 2d       	mov	r31, r0
 37c:	e1 2c       	mov	r14, r1
 37e:	f1 2c       	mov	r15, r1
 380:	87 01       	movw	r16, r14
 382:	21 e0       	ldi	r18, 0x01	; 1
 384:	41 e0       	ldi	r20, 0x01	; 1
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	ce 01       	movw	r24, r28
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 390:	8d e0       	ldi	r24, 0x0D	; 13
 392:	fe 01       	movw	r30, r28
 394:	31 96       	adiw	r30, 0x01	; 1
 396:	aa e0       	ldi	r26, 0x0A	; 10
 398:	b1 e0       	ldi	r27, 0x01	; 1
 39a:	01 90       	ld	r0, Z+
 39c:	0d 92       	st	X+, r0
 39e:	8a 95       	dec	r24
 3a0:	e1 f7       	brne	.-8      	; 0x39a <main+0x56>
	timere[1] = creeaza_timer(2, PORNIT, TRUE, 0, 10000, pin_toggle_led1);
 3a2:	0f 2e       	mov	r0, r31
 3a4:	f9 e5       	ldi	r31, 0x59	; 89
 3a6:	8f 2e       	mov	r8, r31
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	9f 2e       	mov	r9, r31
 3ac:	f0 2d       	mov	r31, r0
 3ae:	0f 2e       	mov	r0, r31
 3b0:	f0 e1       	ldi	r31, 0x10	; 16
 3b2:	af 2e       	mov	r10, r31
 3b4:	f7 e2       	ldi	r31, 0x27	; 39
 3b6:	bf 2e       	mov	r11, r31
 3b8:	c1 2c       	mov	r12, r1
 3ba:	d1 2c       	mov	r13, r1
 3bc:	f0 2d       	mov	r31, r0
 3be:	21 e0       	ldi	r18, 0x01	; 1
 3c0:	41 e0       	ldi	r20, 0x01	; 1
 3c2:	62 e0       	ldi	r22, 0x02	; 2
 3c4:	ce 01       	movw	r24, r28
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 3cc:	8d e0       	ldi	r24, 0x0D	; 13
 3ce:	fe 01       	movw	r30, r28
 3d0:	31 96       	adiw	r30, 0x01	; 1
 3d2:	a7 e1       	ldi	r26, 0x17	; 23
 3d4:	b1 e0       	ldi	r27, 0x01	; 1
 3d6:	01 90       	ld	r0, Z+
 3d8:	0d 92       	st	X+, r0
 3da:	8a 95       	dec	r24
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <main+0x92>
	timere[2] = creeaza_timer(3, PORNIT, FALSE, 0, 5000, pin_toggle_led2);
 3de:	0f 2e       	mov	r0, r31
 3e0:	fa e6       	ldi	r31, 0x6A	; 106
 3e2:	8f 2e       	mov	r8, r31
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	9f 2e       	mov	r9, r31
 3e8:	f0 2d       	mov	r31, r0
 3ea:	0f 2e       	mov	r0, r31
 3ec:	f8 e8       	ldi	r31, 0x88	; 136
 3ee:	af 2e       	mov	r10, r31
 3f0:	f3 e1       	ldi	r31, 0x13	; 19
 3f2:	bf 2e       	mov	r11, r31
 3f4:	c1 2c       	mov	r12, r1
 3f6:	d1 2c       	mov	r13, r1
 3f8:	f0 2d       	mov	r31, r0
 3fa:	20 e0       	ldi	r18, 0x00	; 0
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	63 e0       	ldi	r22, 0x03	; 3
 400:	ce 01       	movw	r24, r28
 402:	01 96       	adiw	r24, 0x01	; 1
 404:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 408:	8d e0       	ldi	r24, 0x0D	; 13
 40a:	fe 01       	movw	r30, r28
 40c:	31 96       	adiw	r30, 0x01	; 1
 40e:	a4 e2       	ldi	r26, 0x24	; 36
 410:	b1 e0       	ldi	r27, 0x01	; 1
 412:	01 90       	ld	r0, Z+
 414:	0d 92       	st	X+, r0
 416:	8a 95       	dec	r24
 418:	e1 f7       	brne	.-8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
	//timere[3] = creeaza_timer(4, PORNIT, FALSE, 0, 1000, pin_toggle_led2);
	
	//timer urmat dupa unul false => nu functioneaza
	do
	{	
		start_evaluare();
 41a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <start_evaluare>
 41e:	fd cf       	rjmp	.-6      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>

00000420 <timer0_init>:
 */ 
#include "timer0_func_def.h"

void timer0_init(void){
	
	TCCR0A |= (1 << WGM01) | (0 << WGM00);  //modul CTC
 420:	84 b5       	in	r24, 0x24	; 36
 422:	82 60       	ori	r24, 0x02	; 2
 424:	84 bd       	out	0x24, r24	; 36
	OCR0A = 0xF9;
 426:	89 ef       	ldi	r24, 0xF9	; 249
 428:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
 42a:	ee e6       	ldi	r30, 0x6E	; 110
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	82 60       	ori	r24, 0x02	; 2
 432:	80 83       	st	Z, r24
 434:	08 95       	ret

00000436 <start_timer0>:
}

void start_timer0(){
	TCCR0B |= START_TIMER0;
 436:	85 b5       	in	r24, 0x25	; 37
 438:	83 60       	ori	r24, 0x03	; 3
 43a:	85 bd       	out	0x25, r24	; 37
 43c:	08 95       	ret

0000043e <_exit>:
 43e:	f8 94       	cli

00000440 <__stop_program>:
 440:	ff cf       	rjmp	.-2      	; 0x440 <__stop_program>
