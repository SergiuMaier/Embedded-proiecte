
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000045e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003c  00800100  00800100  000004d2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000504  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f29  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4b  00000000  00000000  00001555  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ca  00000000  00000000  00001fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  0000266c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e8  00000000  00000000  00002820  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002de  00000000  00000000  00002e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000030e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 68 01 	jmp	0x2d0	; 0x2d0 <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ac 33       	cpi	r26, 0x3C	; 60
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 b2 01 	call	0x364	; 0x364 <main>
  88:	0c 94 2d 02 	jmp	0x45a	; 0x45a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pin_toggle_led0>:
	
	t.stare = var_stare;
	t.autoreset = var_autoreset;
	
	return t; 
}
  90:	95 b1       	in	r25, 0x05	; 5
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	98 27       	eor	r25, r24
  96:	95 b9       	out	0x05, r25	; 5
  98:	2f ef       	ldi	r18, 0xFF	; 255
  9a:	33 ed       	ldi	r19, 0xD3	; 211
  9c:	90 e3       	ldi	r25, 0x30	; 48
  9e:	21 50       	subi	r18, 0x01	; 1
  a0:	30 40       	sbci	r19, 0x00	; 0
  a2:	90 40       	sbci	r25, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <pin_toggle_led0+0xe>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <pin_toggle_led0+0x18>
  a8:	00 00       	nop
  aa:	95 b1       	in	r25, 0x05	; 5
  ac:	89 27       	eor	r24, r25
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <pin_toggle_led1>:
  b2:	95 b1       	in	r25, 0x05	; 5
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	98 27       	eor	r25, r24
  b8:	95 b9       	out	0x05, r25	; 5
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	33 ed       	ldi	r19, 0xD3	; 211
  be:	90 e3       	ldi	r25, 0x30	; 48
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	30 40       	sbci	r19, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <pin_toggle_led1+0xe>
  c8:	00 c0       	rjmp	.+0      	; 0xca <pin_toggle_led1+0x18>
  ca:	00 00       	nop
  cc:	95 b1       	in	r25, 0x05	; 5
  ce:	89 27       	eor	r24, r25
  d0:	85 b9       	out	0x05, r24	; 5
  d2:	08 95       	ret

000000d4 <pin_toggle_led2>:
  d4:	95 b1       	in	r25, 0x05	; 5
  d6:	84 e0       	ldi	r24, 0x04	; 4
  d8:	98 27       	eor	r25, r24
  da:	95 b9       	out	0x05, r25	; 5
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	33 ed       	ldi	r19, 0xD3	; 211
  e0:	90 e3       	ldi	r25, 0x30	; 48
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	30 40       	sbci	r19, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <pin_toggle_led2+0xe>
  ea:	00 c0       	rjmp	.+0      	; 0xec <pin_toggle_led2+0x18>
  ec:	00 00       	nop
  ee:	95 b1       	in	r25, 0x05	; 5
  f0:	89 27       	eor	r24, r25
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	08 95       	ret

000000f6 <aprinde_led>:
  f6:	fc 01       	movw	r30, r24
  f8:	09 95       	icall
  fa:	08 95       	ret

000000fc <creeaza_timer>:
  fc:	af 92       	push	r10
  fe:	bf 92       	push	r11
 100:	cf 92       	push	r12
 102:	df 92       	push	r13
 104:	ef 92       	push	r14
 106:	ff 92       	push	r15
 108:	0f 93       	push	r16
 10a:	fc 01       	movw	r30, r24
 10c:	60 83       	st	Z, r22
 10e:	41 83       	std	Z+1, r20	; 0x01
 110:	22 83       	std	Z+2, r18	; 0x02
 112:	03 83       	std	Z+3, r16	; 0x03
 114:	c4 82       	std	Z+4, r12	; 0x04
 116:	d5 82       	std	Z+5, r13	; 0x05
 118:	e6 82       	std	Z+6, r14	; 0x06
 11a:	f7 82       	std	Z+7, r15	; 0x07
 11c:	b1 86       	std	Z+9, r11	; 0x09
 11e:	a0 86       	std	Z+8, r10	; 0x08
 120:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sys_tick>
 124:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sys_tick+0x1>
 128:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <counter_curent+0x1>
 12c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <counter_curent>
 130:	cf 01       	movw	r24, r30
 132:	0f 91       	pop	r16
 134:	ff 90       	pop	r15
 136:	ef 90       	pop	r14
 138:	df 90       	pop	r13
 13a:	cf 90       	pop	r12
 13c:	bf 90       	pop	r11
 13e:	af 90       	pop	r10
 140:	08 95       	ret

00000142 <evalueaza_timer>:
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <id_timer+0x1>
 14a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <id_timer>
 14e:	c0 e0       	ldi	r28, 0x00	; 0
 150:	d0 e0       	ldi	r29, 0x00	; 0
 152:	28 c0       	rjmp	.+80     	; 0x1a4 <evalueaza_timer+0x62>
 154:	9c 01       	movw	r18, r24
 156:	22 0f       	add	r18, r18
 158:	33 1f       	adc	r19, r19
 15a:	22 0f       	add	r18, r18
 15c:	33 1f       	adc	r19, r19
 15e:	22 0f       	add	r18, r18
 160:	33 1f       	adc	r19, r19
 162:	fc 01       	movw	r30, r24
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	e2 0f       	add	r30, r18
 16a:	f3 1f       	adc	r31, r19
 16c:	e6 5f       	subi	r30, 0xF6	; 246
 16e:	fe 4f       	sbci	r31, 0xFE	; 254
 170:	20 81       	ld	r18, Z
 172:	22 23       	and	r18, r18
 174:	91 f0       	breq	.+36     	; 0x19a <evalueaza_timer+0x58>
 176:	9c 01       	movw	r18, r24
 178:	22 0f       	add	r18, r18
 17a:	33 1f       	adc	r19, r19
 17c:	22 0f       	add	r18, r18
 17e:	33 1f       	adc	r19, r19
 180:	22 0f       	add	r18, r18
 182:	33 1f       	adc	r19, r19
 184:	fc 01       	movw	r30, r24
 186:	ee 0f       	add	r30, r30
 188:	ff 1f       	adc	r31, r31
 18a:	e2 0f       	add	r30, r18
 18c:	f3 1f       	adc	r31, r19
 18e:	e6 5f       	subi	r30, 0xF6	; 246
 190:	fe 4f       	sbci	r31, 0xFE	; 254
 192:	21 81       	ldd	r18, Z+1	; 0x01
 194:	21 30       	cpi	r18, 0x01	; 1
 196:	09 f4       	brne	.+2      	; 0x19a <evalueaza_timer+0x58>
 198:	21 96       	adiw	r28, 0x01	; 1
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <id_timer+0x1>
 1a0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <id_timer>
 1a4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 1a8:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 1ac:	85 30       	cpi	r24, 0x05	; 5
 1ae:	91 05       	cpc	r25, r1
 1b0:	8c f2       	brlt	.-94     	; 0x154 <evalueaza_timer+0x12>
 1b2:	20 97       	sbiw	r28, 0x00	; 0
 1b4:	09 f4       	brne	.+2      	; 0x1b8 <evalueaza_timer+0x76>
 1b6:	7c c0       	rjmp	.+248    	; 0x2b0 <evalueaza_timer+0x16e>
 1b8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <id_timer+0x1>
 1bc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <id_timer>
 1c0:	6f c0       	rjmp	.+222    	; 0x2a0 <evalueaza_timer+0x15e>
 1c2:	c9 01       	movw	r24, r18
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	f9 01       	movw	r30, r18
 1d2:	ee 0f       	add	r30, r30
 1d4:	ff 1f       	adc	r31, r31
 1d6:	e8 0f       	add	r30, r24
 1d8:	f9 1f       	adc	r31, r25
 1da:	e6 5f       	subi	r30, 0xF6	; 246
 1dc:	fe 4f       	sbci	r31, 0xFE	; 254
 1de:	44 81       	ldd	r20, Z+4	; 0x04
 1e0:	55 81       	ldd	r21, Z+5	; 0x05
 1e2:	66 81       	ldd	r22, Z+6	; 0x06
 1e4:	77 81       	ldd	r23, Z+7	; 0x07
 1e6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sys_tick>
 1ea:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sys_tick+0x1>
 1ee:	09 2e       	mov	r0, r25
 1f0:	00 0c       	add	r0, r0
 1f2:	aa 0b       	sbc	r26, r26
 1f4:	bb 0b       	sbc	r27, r27
 1f6:	48 17       	cp	r20, r24
 1f8:	59 07       	cpc	r21, r25
 1fa:	6a 07       	cpc	r22, r26
 1fc:	7b 07       	cpc	r23, r27
 1fe:	09 f0       	breq	.+2      	; 0x202 <evalueaza_timer+0xc0>
 200:	46 c0       	rjmp	.+140    	; 0x28e <evalueaza_timer+0x14c>
 202:	f9 01       	movw	r30, r18
 204:	ee 0f       	add	r30, r30
 206:	ff 1f       	adc	r31, r31
 208:	22 0f       	add	r18, r18
 20a:	33 1f       	adc	r19, r19
 20c:	22 0f       	add	r18, r18
 20e:	33 1f       	adc	r19, r19
 210:	22 0f       	add	r18, r18
 212:	33 1f       	adc	r19, r19
 214:	e2 0f       	add	r30, r18
 216:	f3 1f       	adc	r31, r19
 218:	e6 5f       	subi	r30, 0xF6	; 246
 21a:	fe 4f       	sbci	r31, 0xFE	; 254
 21c:	80 85       	ldd	r24, Z+8	; 0x08
 21e:	91 85       	ldd	r25, Z+9	; 0x09
 220:	0e 94 7b 00 	call	0xf6	; 0xf6 <aprinde_led>
 224:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 228:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 22c:	fc 01       	movw	r30, r24
 22e:	ee 0f       	add	r30, r30
 230:	ff 1f       	adc	r31, r31
 232:	9c 01       	movw	r18, r24
 234:	22 0f       	add	r18, r18
 236:	33 1f       	adc	r19, r19
 238:	22 0f       	add	r18, r18
 23a:	33 1f       	adc	r19, r19
 23c:	22 0f       	add	r18, r18
 23e:	33 1f       	adc	r19, r19
 240:	e2 0f       	add	r30, r18
 242:	f3 1f       	adc	r31, r19
 244:	e6 5f       	subi	r30, 0xF6	; 246
 246:	fe 4f       	sbci	r31, 0xFE	; 254
 248:	22 e0       	ldi	r18, 0x02	; 2
 24a:	21 83       	std	Z+1, r18	; 0x01
 24c:	22 81       	ldd	r18, Z+2	; 0x02
 24e:	21 30       	cpi	r18, 0x01	; 1
 250:	81 f4       	brne	.+32     	; 0x272 <evalueaza_timer+0x130>
 252:	fc 01       	movw	r30, r24
 254:	ee 0f       	add	r30, r30
 256:	ff 1f       	adc	r31, r31
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	e8 0f       	add	r30, r24
 266:	f9 1f       	adc	r31, r25
 268:	e6 5f       	subi	r30, 0xF6	; 246
 26a:	fe 4f       	sbci	r31, 0xFE	; 254
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	81 83       	std	Z+1, r24	; 0x01
 270:	0e c0       	rjmp	.+28     	; 0x28e <evalueaza_timer+0x14c>
 272:	fc 01       	movw	r30, r24
 274:	ee 0f       	add	r30, r30
 276:	ff 1f       	adc	r31, r31
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	e8 0f       	add	r30, r24
 286:	f9 1f       	adc	r31, r25
 288:	e6 5f       	subi	r30, 0xF6	; 246
 28a:	fe 4f       	sbci	r31, 0xFE	; 254
 28c:	11 82       	std	Z+1, r1	; 0x01
 28e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <id_timer>
 292:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <id_timer+0x1>
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <id_timer+0x1>
 29c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <id_timer>
 2a0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <id_timer>
 2a4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <id_timer+0x1>
 2a8:	2c 17       	cp	r18, r28
 2aa:	3d 07       	cpc	r19, r29
 2ac:	0c f4       	brge	.+2      	; 0x2b0 <evalueaza_timer+0x16e>
 2ae:	89 cf       	rjmp	.-238    	; 0x1c2 <evalueaza_timer+0x80>
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	08 95       	ret

000002b6 <start_evaluare>:
 2b6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <flag>
 2ba:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <flag+0x1>
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	31 f4       	brne	.+12     	; 0x2ce <start_evaluare+0x18>
 2c2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flag+0x1>
 2c6:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <flag>
 2ca:	0e 94 a1 00 	call	0x142	; 0x142 <evalueaza_timer>
 2ce:	08 95       	ret

000002d0 <__vector_14>:


ISR(TIMER0_COMPA_vect){ 
 2d0:	1f 92       	push	r1
 2d2:	0f 92       	push	r0
 2d4:	0f b6       	in	r0, 0x3f	; 63
 2d6:	0f 92       	push	r0
 2d8:	11 24       	eor	r1, r1
 2da:	8f 93       	push	r24
 2dc:	9f 93       	push	r25
	
	cli();
 2de:	f8 94       	cli
	
	sys_tick++;	
 2e0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sys_tick>
 2e4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sys_tick+0x1>
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <sys_tick+0x1>
 2ee:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <sys_tick>
	flag = 1;
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <flag+0x1>
 2fa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <flag>
	counter_timp++;
 2fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 302:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 30c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	sei();
 310:	78 94       	sei
}
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	0f 90       	pop	r0
 318:	0f be       	out	0x3f, r0	; 63
 31a:	0f 90       	pop	r0
 31c:	1f 90       	pop	r1
 31e:	18 95       	reti

00000320 <port_init>:

#include <stdio.h>

void port_init(void){
	
	DDRB = 0x0F;   //00001111
 320:	8f e0       	ldi	r24, 0x0F	; 15
 322:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
 324:	15 b8       	out	0x05, r1	; 5
	DDRD |= (1 << PIND2) | (1 << PIND3);  //INT0 & INT1
 326:	8a b1       	in	r24, 0x0a	; 10
 328:	8c 60       	ori	r24, 0x0C	; 12
 32a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << PIND2) | (1 << PIND3);
 32c:	8b b1       	in	r24, 0x0b	; 11
 32e:	8c 60       	ori	r24, 0x0C	; 12
 330:	8b b9       	out	0x0b, r24	; 11
 332:	08 95       	ret

00000334 <interrupt_init>:
}

void interrupt_init(void){
	
	EICRA |= (1 << ISC11) | (1 << ISC10) | (1 << ISC01) | (1 << ISC00);
 334:	e9 e6       	ldi	r30, 0x69	; 105
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	80 81       	ld	r24, Z
 33a:	8f 60       	ori	r24, 0x0F	; 15
 33c:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1) | (1 << INT0);
 33e:	8d b3       	in	r24, 0x1d	; 29
 340:	83 60       	ori	r24, 0x03	; 3
 342:	8d bb       	out	0x1d, r24	; 29
	EIFR |= (0 << INTF1) | (0 << INTF0);
 344:	8c b3       	in	r24, 0x1c	; 28
 346:	8c bb       	out	0x1c, r24	; 28
	PCICR |= (0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
 348:	e8 e6       	ldi	r30, 0x68	; 104
 34a:	f0 e0       	ldi	r31, 0x00	; 0
 34c:	80 81       	ld	r24, Z
 34e:	80 83       	st	Z, r24
 350:	08 95       	ret

00000352 <init_devices>:
}

void init_devices(void){
	
	cli();
 352:	f8 94       	cli
	
	port_init();
 354:	0e 94 90 01 	call	0x320	; 0x320 <port_init>
	interrupt_init();
 358:	0e 94 9a 01 	call	0x334	; 0x334 <interrupt_init>
	timer0_init();
 35c:	0e 94 1e 02 	call	0x43c	; 0x43c <timer0_init>
	
	sei();
 360:	78 94       	sei
 362:	08 95       	ret

00000364 <main>:

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void){
 364:	cf 93       	push	r28
 366:	df 93       	push	r29
 368:	cd b7       	in	r28, 0x3d	; 61
 36a:	de b7       	in	r29, 0x3e	; 62
 36c:	2a 97       	sbiw	r28, 0x0a	; 10
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	f8 94       	cli
 372:	de bf       	out	0x3e, r29	; 62
 374:	0f be       	out	0x3f, r0	; 63
 376:	cd bf       	out	0x3d, r28	; 61
	
	init_devices();	//porturi, timer, intreruperi
 378:	0e 94 a9 01 	call	0x352	; 0x352 <init_devices>
	start_timer0(); 
 37c:	0e 94 29 02 	call	0x452	; 0x452 <start_timer0>
	
	timere[0] = creeaza_timer(1, PORNIT, TRUE, 0, 3000, pin_toggle_led0);
 380:	0f 2e       	mov	r0, r31
 382:	f8 e4       	ldi	r31, 0x48	; 72
 384:	af 2e       	mov	r10, r31
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	bf 2e       	mov	r11, r31
 38a:	f0 2d       	mov	r31, r0
 38c:	0f 2e       	mov	r0, r31
 38e:	f8 eb       	ldi	r31, 0xB8	; 184
 390:	cf 2e       	mov	r12, r31
 392:	fb e0       	ldi	r31, 0x0B	; 11
 394:	df 2e       	mov	r13, r31
 396:	e1 2c       	mov	r14, r1
 398:	f1 2c       	mov	r15, r1
 39a:	f0 2d       	mov	r31, r0
 39c:	00 e0       	ldi	r16, 0x00	; 0
 39e:	21 e0       	ldi	r18, 0x01	; 1
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	61 e0       	ldi	r22, 0x01	; 1
 3a4:	ce 01       	movw	r24, r28
 3a6:	01 96       	adiw	r24, 0x01	; 1
 3a8:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 3ac:	8a e0       	ldi	r24, 0x0A	; 10
 3ae:	fe 01       	movw	r30, r28
 3b0:	31 96       	adiw	r30, 0x01	; 1
 3b2:	aa e0       	ldi	r26, 0x0A	; 10
 3b4:	b1 e0       	ldi	r27, 0x01	; 1
 3b6:	01 90       	ld	r0, Z+
 3b8:	0d 92       	st	X+, r0
 3ba:	8a 95       	dec	r24
 3bc:	e1 f7       	brne	.-8      	; 0x3b6 <main+0x52>
	timere[1] = creeaza_timer(2, PORNIT, TRUE, 0, 6000, pin_toggle_led1);
 3be:	0f 2e       	mov	r0, r31
 3c0:	f9 e5       	ldi	r31, 0x59	; 89
 3c2:	af 2e       	mov	r10, r31
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	bf 2e       	mov	r11, r31
 3c8:	f0 2d       	mov	r31, r0
 3ca:	0f 2e       	mov	r0, r31
 3cc:	f0 e7       	ldi	r31, 0x70	; 112
 3ce:	cf 2e       	mov	r12, r31
 3d0:	f7 e1       	ldi	r31, 0x17	; 23
 3d2:	df 2e       	mov	r13, r31
 3d4:	e1 2c       	mov	r14, r1
 3d6:	f1 2c       	mov	r15, r1
 3d8:	f0 2d       	mov	r31, r0
 3da:	21 e0       	ldi	r18, 0x01	; 1
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	62 e0       	ldi	r22, 0x02	; 2
 3e0:	ce 01       	movw	r24, r28
 3e2:	01 96       	adiw	r24, 0x01	; 1
 3e4:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 3e8:	8a e0       	ldi	r24, 0x0A	; 10
 3ea:	fe 01       	movw	r30, r28
 3ec:	31 96       	adiw	r30, 0x01	; 1
 3ee:	a4 e1       	ldi	r26, 0x14	; 20
 3f0:	b1 e0       	ldi	r27, 0x01	; 1
 3f2:	01 90       	ld	r0, Z+
 3f4:	0d 92       	st	X+, r0
 3f6:	8a 95       	dec	r24
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <main+0x8e>
	timere[2] = creeaza_timer(3, PORNIT, TRUE, 0, 9000, pin_toggle_led2);
 3fa:	0f 2e       	mov	r0, r31
 3fc:	fa e6       	ldi	r31, 0x6A	; 106
 3fe:	af 2e       	mov	r10, r31
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	bf 2e       	mov	r11, r31
 404:	f0 2d       	mov	r31, r0
 406:	0f 2e       	mov	r0, r31
 408:	f8 e2       	ldi	r31, 0x28	; 40
 40a:	cf 2e       	mov	r12, r31
 40c:	f3 e2       	ldi	r31, 0x23	; 35
 40e:	df 2e       	mov	r13, r31
 410:	e1 2c       	mov	r14, r1
 412:	f1 2c       	mov	r15, r1
 414:	f0 2d       	mov	r31, r0
 416:	21 e0       	ldi	r18, 0x01	; 1
 418:	41 e0       	ldi	r20, 0x01	; 1
 41a:	63 e0       	ldi	r22, 0x03	; 3
 41c:	ce 01       	movw	r24, r28
 41e:	01 96       	adiw	r24, 0x01	; 1
 420:	0e 94 7e 00 	call	0xfc	; 0xfc <creeaza_timer>
 424:	8a e0       	ldi	r24, 0x0A	; 10
 426:	fe 01       	movw	r30, r28
 428:	31 96       	adiw	r30, 0x01	; 1
 42a:	ae e1       	ldi	r26, 0x1E	; 30
 42c:	b1 e0       	ldi	r27, 0x01	; 1
 42e:	01 90       	ld	r0, Z+
 430:	0d 92       	st	X+, r0
 432:	8a 95       	dec	r24
 434:	e1 f7       	brne	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
	
	do
	{	
		start_evaluare();
 436:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <start_evaluare>
 43a:	fd cf       	rjmp	.-6      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>

0000043c <timer0_init>:
 43c:	84 b5       	in	r24, 0x24	; 36
 43e:	82 60       	ori	r24, 0x02	; 2
 440:	84 bd       	out	0x24, r24	; 36
 442:	89 ef       	ldi	r24, 0xF9	; 249
 444:	87 bd       	out	0x27, r24	; 39
 446:	ee e6       	ldi	r30, 0x6E	; 110
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	82 60       	ori	r24, 0x02	; 2
 44e:	80 83       	st	Z, r24
 450:	08 95       	ret

00000452 <start_timer0>:
 452:	85 b5       	in	r24, 0x25	; 37
 454:	83 60       	ori	r24, 0x03	; 3
 456:	85 bd       	out	0x25, r24	; 37
 458:	08 95       	ret

0000045a <_exit>:
 45a:	f8 94       	cli

0000045c <__stop_program>:
 45c:	ff cf       	rjmp	.-2      	; 0x45c <__stop_program>
